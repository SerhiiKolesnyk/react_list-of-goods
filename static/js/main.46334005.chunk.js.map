{"version":3,"sources":["Components/Goods.jsx","App.js","index.js"],"names":["Goods","state","sortMethod","sortFunction","event","name","target","setState","reset","defaultConditions","this","goods","props","visiableGoods","sort","a","b","localeCompare","length","reverse","map","good","key","type","onClick","React","Component","goodsFromServer","App","isVisible","changeVisiability","className","ReactDOM","render","document","getElementById"],"mappings":"mPAwFeA,E,4MApFXC,MAAQ,CACNC,WAAY,I,EAOdC,aAAe,SAACC,GACd,IAAQC,EAASD,EAAME,OAAfD,KAER,EAAKE,UAAS,kBAAqB,CACjCL,WADY,EAAGA,aACYG,EAAO,GAAKA,O,EAI3CG,MAAQ,WACN,EAAKD,SAAS,EAAKE,oB,uDAbrB,WACEC,KAAKD,kBAAL,eAA6BC,KAAKT,S,oBAepC,WAAU,IAAD,OACCU,EAAUD,KAAKE,MAAfD,MACAT,EAAeQ,KAAKT,MAApBC,WACFW,EAAa,YAAOF,GAE1B,OAAQT,GACN,IAAK,iBACLW,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC7C,MACA,IAAK,eACLH,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAC1C,MACA,IAAK,UACLL,EAAcM,UAMhB,OACE,6BACE,4BACGN,EAAcO,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAOA,OAE7C,4BACEE,KAAK,SACLlB,KAAK,UACLmB,QAAS,SAAApB,GAAK,OAAI,EAAKD,aAAaC,KAHtC,WAQA,4BACEmB,KAAK,SACLlB,KAAK,eACLmB,QAAS,SAAApB,GAAK,OAAI,EAAKD,aAAaC,KAHtC,kBAQA,4BACEmB,KAAK,SACLlB,KAAK,iBACLmB,QAAS,SAAApB,GAAK,OAAI,EAAKD,aAAaC,KAHtC,uBAQA,4BACEmB,KAAK,SACLlB,KAAK,cACLmB,QAASd,KAAKF,OAHhB,c,GArEUiB,IAAMC,WCEpBC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCaC,E,4MA9Bb3B,MAAQ,CACN4B,WAAW,G,EAGbC,kBAAoB,WAClB,EAAKvB,SAAS,CAAEsB,WAAW,K,4CAG7B,WACE,IAAQA,EAAcnB,KAAKT,MAAnB4B,UAER,OACE,yBAAKE,UAAU,OACZF,GACE,kBAAC,EAAD,CAAOlB,MAAOgB,KACfE,GAEF,4BACEN,KAAK,SACLC,QAASd,KAAKoB,mBAFhB,c,GAlBUL,IAAMC,WCdxBM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.46334005.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Goods extends React.Component {\n    state = {\n      sortMethod: '',\n    };\n\n    componentDidMount() {\n      this.defaultConditions = {...this.state};\n    }\n\n    sortFunction = (event) => {\n      const { name } = event.target;\n\n      this.setState(({ sortMethod }) => ({\n        sortMethod: sortMethod === name ? '' : name,\n      }));\n    }\n\n    reset = () => {\n      this.setState(this.defaultConditions);\n    }\n\n    render() {\n      const { goods } = this.props;\n      const { sortMethod } = this.state;\n      const visiableGoods = [...goods];\n\n      switch (sortMethod) {\n        case('sortByAlphabet'):\n        visiableGoods.sort((a, b) => a.localeCompare(b));\n        break;\n        case('sortByLength'):\n        visiableGoods.sort((a, b) => a.length - b.length);\n        break;\n        case('reverse'):\n        visiableGoods.reverse();\n        break;\n        default:\n          break;\n      }\n\n      return (\n        <div>\n          <ul>\n            {visiableGoods.map(good => <li key={good}>{good}</li>)}\n          </ul>\n          <button\n            type=\"button\"\n            name=\"reverse\"\n            onClick={event => this.sortFunction(event)}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            name=\"sortByLength\"\n            onClick={event => this.sortFunction(event)}\n          >\n            Sort by Length\n          </button>\n\n          <button\n            type=\"button\"\n            name=\"sortByAlphabet\"\n            onClick={event => this.sortFunction(event)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            name=\"resetFilter\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n        </div>\n      );\n    }\n}\n\nGoods.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Goods;\n","import React from 'react';\nimport './App.css';\n\nimport Goods from './Components/Goods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isVisible: false,\n  }\n\n  changeVisiability = () => {\n    this.setState({ isVisible: true });\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isVisible\n        && <Goods goods={goodsFromServer} />}\n        {!isVisible\n        && (\n        <button\n          type=\"button\"\n          onClick={this.changeVisiability}\n        >\n          Start\n        </button>\n        )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}